1、查看文件的两个版本之间的差异如何帮助你了解引入的错误？

答：查看两个文件的两个版本之间的差异，系统会把修改前后的内容进行对比，而且会用不同的颜色显示出来。一般文件出现错误是因为在修改的时候出错导致，差异可以让我缩小范围查找错误。

2、从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？

答：当在开发的过程中，文件内容会不断修改，测试，发现问题。在修改的过程中，也会出现某些错误，需要重新开发。这个时候如果有历史记录，那么回到最初版本重新修改变得尤其重要，而且在修改文件内容的时候，也可以大胆修改，不怕出错。这也给了试错的机会。

3、你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？

答：手动选择提交可以更加人性化地选择性提交，可以按照修改的内容关联性进行提交，逻辑性简单，避免复杂。但是会出现忘记提交的可能性。

自动保存版本优点很明显，会按时保存，并且用户不用担心修改的文件忘记保存，而且可以很容易获取之前的版本。但是保存的修改内容过于复杂，很难阅读修改的内容。

4、为何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？

答：因为git是以整个文件夹的文件内容进行检测的，如果一个文件进行了修改，它也会把整个文件夹里面的文件进行一次保存更新，永远都把自己保存的内容以最新的内容保存。

而其他系统因为局限性，它们只会保存现在正在编辑的文件，而对其他没有编辑的文件进行忽略。

5、如何使用命令 git log 和 git diff 来查看文件的历史记录？

答：很简单，只需要打开命令行界面，进入到项目文件夹，然后在项目文件夹主目录使用git log就会显示详细更改信息。按q退出。
git diff 后面只需要跟两个修改信息的ID号，就可以知道他们的不同之处，例如增加了什么，删除了什么。按Q退出。

6、使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？

答：因为有版本控制，只要有原来的存档，我就可以随意修改现在的文件，当我发现修改完后感觉不满意，或者发生重大错误，只要我回到原来的存档里，就可以重新来过，不用担心文件被破坏。

7、现在你已设置了工作空间，你想尝试使用 Git 来做些什么？

答：存储我的开发项目的版本。可以勇敢修改代码了。